{"ast":null,"code":"var _jsxFileName = \"/Users/lilayoun/Desktop/lila/src/components/FractalTree.js\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport \"../styles/FractalTree.css\";\nlet angle;\nconst Sketch = p5 => {\n  p5.setup = () => {\n    p5.createCanvas(400, 400, \"transparent\");\n    angle = p5.PI / 4;\n    p5.stroke(255);\n  };\n  p5.draw = () => {\n    p5.clear();\n    p5.translate(200, p5.height);\n    angle = p5.map(p5.sin(p5.frameCount * 0.01), -1, 1, p5.PI / 2, p5.PI / 16); // vary the angle using sin()\n    branch(100);\n  };\n  function branch(len) {\n    p5.line(0, 0, 0, -len);\n    p5.translate(0, -len);\n    if (len > 4) {\n      p5.push();\n      p5.rotate(angle);\n      branch(len * 0.67);\n      p5.pop();\n      p5.push();\n      p5.rotate(-angle);\n      branch(len * 0.67);\n      p5.pop();\n    }\n  }\n};\n_c = Sketch;\nconst FractalTree = () => /*#__PURE__*/React.createElement(\"div\", {\n  id: \"fractal-tree\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ReactP5Wrapper, {\n  sketch: Sketch,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}));\n_c2 = FractalTree;\nexport default FractalTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sketch\");\n$RefreshReg$(_c2, \"FractalTree\");","map":{"version":3,"names":["React","ReactP5Wrapper","angle","Sketch","p5","setup","createCanvas","PI","stroke","draw","clear","translate","height","map","sin","frameCount","branch","len","line","push","rotate","pop","_c","FractalTree","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sketch","_c2","$RefreshReg$"],"sources":["/Users/lilayoun/Desktop/lila/src/components/FractalTree.js"],"sourcesContent":["import React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport \"../styles/FractalTree.css\";\n\nlet angle;\n\nconst Sketch = p5 => {\n  p5.setup = () => {\n    p5.createCanvas(400, 400, \"transparent\");\n    angle = p5.PI / 4;\n    p5.stroke(255);\n  };\n\n  p5.draw = () => {\n    p5.clear();\n    p5.translate(200, p5.height);\n    angle = p5.map(p5.sin(p5.frameCount * 0.01), -1, 1, p5.PI / 2, p5.PI / 16); // vary the angle using sin()\n    branch(100);\n  };\n\n  function branch(len) {\n    p5.line(0, 0, 0, -len);\n    p5.translate(0, -len);\n    if (len > 4) {\n      p5.push();\n      p5.rotate(angle);\n      branch(len * 0.67);\n      p5.pop();\n      p5.push();\n      p5.rotate(-angle);\n      branch(len * 0.67);\n      p5.pop();\n    }\n  }\n};\n\nconst FractalTree = () => (\n  <div id=\"fractal-tree\">\n    <ReactP5Wrapper sketch={Sketch} />\n  </div>\n);\n\nexport default FractalTree;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,2BAA2B;AAElC,IAAIC,KAAK;AAET,MAAMC,MAAM,GAAGC,EAAE,IAAI;EACnBA,EAAE,CAACC,KAAK,GAAG,MAAM;IACfD,EAAE,CAACE,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,CAAC;IACxCJ,KAAK,GAAGE,EAAE,CAACG,EAAE,GAAG,CAAC;IACjBH,EAAE,CAACI,MAAM,CAAC,GAAG,CAAC;EAChB,CAAC;EAEDJ,EAAE,CAACK,IAAI,GAAG,MAAM;IACdL,EAAE,CAACM,KAAK,CAAC,CAAC;IACVN,EAAE,CAACO,SAAS,CAAC,GAAG,EAAEP,EAAE,CAACQ,MAAM,CAAC;IAC5BV,KAAK,GAAGE,EAAE,CAACS,GAAG,CAACT,EAAE,CAACU,GAAG,CAACV,EAAE,CAACW,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAEX,EAAE,CAACG,EAAE,GAAG,CAAC,EAAEH,EAAE,CAACG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5ES,MAAM,CAAC,GAAG,CAAC;EACb,CAAC;EAED,SAASA,MAAMA,CAACC,GAAG,EAAE;IACnBb,EAAE,CAACc,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAACD,GAAG,CAAC;IACtBb,EAAE,CAACO,SAAS,CAAC,CAAC,EAAE,CAACM,GAAG,CAAC;IACrB,IAAIA,GAAG,GAAG,CAAC,EAAE;MACXb,EAAE,CAACe,IAAI,CAAC,CAAC;MACTf,EAAE,CAACgB,MAAM,CAAClB,KAAK,CAAC;MAChBc,MAAM,CAACC,GAAG,GAAG,IAAI,CAAC;MAClBb,EAAE,CAACiB,GAAG,CAAC,CAAC;MACRjB,EAAE,CAACe,IAAI,CAAC,CAAC;MACTf,EAAE,CAACgB,MAAM,CAAC,CAAClB,KAAK,CAAC;MACjBc,MAAM,CAACC,GAAG,GAAG,IAAI,CAAC;MAClBb,EAAE,CAACiB,GAAG,CAAC,CAAC;IACV;EACF;AACF,CAAC;AAACC,EAAA,GA5BInB,MAAM;AA8BZ,MAAMoB,WAAW,GAAGA,CAAA,kBAClBvB,KAAA,CAAAwB,aAAA;EAAKC,EAAE,EAAC,cAAc;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACpB/B,KAAA,CAAAwB,aAAA,CAACvB,cAAc;EAAC+B,MAAM,EAAE7B,MAAO;EAAAuB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAC9B,CACN;AAACE,GAAA,GAJIV,WAAW;AAMjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}